{"version":3,"sources":["webpack:///./src/components/flipCard.js","webpack:///./src/pages/projects.js","webpack:///./src/components/main.js","webpack:///./src/components/logo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["Wrapper","styled","div","Card","animated","props","inputcolor","FrontCard","BackCard","FlipCard","title","content","color","useState","isFlipped","setFlipped","useSpring","opacity","transform","config","mass","tension","friction","onClick","style","interpolate","t","o","ProjectsWrapper","Projects","id","name","description","map","key","StyledMain","main","Main","children","fade","from","to","StyledLogo","TitleText","theme","fonts","SubTitleText","Logo","StyledHeader","header","Header","StyledFooter","footer","SocialMediaList","SocialMediaLink","a","colors","primary","secondary","Footer","href","Grid","Layout","query","render","data","site","siteMetadata","lang","charSet","rel","direction"],"mappings":"iKAIMA,EAAUC,IAAOC,IAAV,wEAAGD,CAAH,4EAQPE,EAAOF,YAAOG,IAASF,KAAnB,qEAAGD,CAAH,gLAUM,SAAAI,GAAK,OAAIA,EAAMC,cAGzBC,EAAYN,YAAOE,GAAV,0EAAGF,CAAH,sBAITO,EAAWP,YAAOE,GAAV,yEAAGF,CAAH,8CAsCCQ,EAjCE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAAY,EACdC,oBAAS,GAAlCC,EADuC,KAC5BC,EAD4B,OAGfC,YAAU,CACvCC,QAASH,EAAY,EAAI,EACzBI,UAAU,+BAA+BJ,EAAY,IAAM,GAAlD,OACTK,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,MAHrCJ,EAHsC,EAGtCA,UAAWD,EAH2B,EAG3BA,QAMnB,OACE,kBAACjB,EAAD,CAASuB,QAAS,kBAAMR,GAAYD,KAChCA,EAQA,kBAACN,EAAD,CACEgB,MAAO,CACLP,UACAC,UAAWA,EAAUO,aAAY,SAAAC,GAAC,OAAOA,EAAP,uBAEpCpB,WAAYM,GAEXD,GAdH,kBAACJ,EAAD,CACEiB,MAAO,CAAEP,QAASA,EAAQQ,aAAY,SAAAE,GAAC,OAAI,KAAQT,aACnDZ,WAAYM,GAEXF,KC7CLkB,EAAkB3B,IAAOC,IAAV,4EAAGD,CAAH,kCAkEN4B,UA7DE,WAyCf,OACE,kBAAC,IAAD,KACE,2CACA,sUAOA,8DACA,kBAACD,EAAD,KAnDe,CACjB,CACEE,GAAI,EACJC,KAAM,sBACNC,YAAY,mSAGZpB,MAAO,QAET,CACEkB,GAAI,EACJC,KAAM,WACNC,YAAY,yZAGZpB,MAAO,cAET,CACEkB,GAAI,EACJC,KAAM,cACNC,YAAY,+PAEZpB,MAAO,iBAET,CACEkB,GAAI,EACJC,KAAM,mBACNC,YACE,0UACFpB,MAAO,aAET,CACEkB,GAAI,EACJC,KAAM,YACNC,YACE,yOACFpB,MAAO,cAgBOqB,KAAI,gBAAGH,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAapB,EAA1B,EAA0BA,MAA1B,OACd,kBAAC,EAAD,CAAUsB,IAAKJ,EAAIpB,MAAOqB,EAAMpB,QAASqB,EAAapB,MAAOA,W,gIC1DjEuB,EAAalC,YAAOG,IAASgC,MAAnB,qEAAGnC,CAAH,wFAoBDoC,EAVF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAERC,EAAOvB,YAAU,CACrBwB,KAAM,CAAEvB,QAAS,GACjBwB,GAAI,CAAExB,QAAS,KAGjB,OAAO,kBAACkB,EAAD,CAAYX,MAAOe,GAAOD,ICpB7BI,EAAazC,IAAOC,IAAV,uEAAGD,CAAH,MAEV0C,EAAY1C,IAAOC,IAAV,sEAAGD,CAAH,yDACE,SAAAI,GAAK,OAAIA,EAAMuC,MAAMC,MAAMnC,SAKtCoC,EAAe7C,IAAOC,IAAV,yEAAGD,CAAH,2CAYH8C,EAPF,kBACX,kBAACL,EAAD,KACE,kBAACC,EAAD,uBACA,kBAACG,EAAD,wCCfEE,EAAe/C,IAAOgD,OAAV,uEAAGhD,CAAH,oCAWHiD,EANA,kBACb,kBAACF,EAAD,KACE,kBAAC,EAAD,Q,YCREG,EAAelD,IAAOmD,OAAV,2EAAGnD,CAAH,6FAQZoD,EAAkBpD,IAAOC,IAAV,8EAAGD,CAAH,oEAMfqD,EAAkBrD,IAAOsD,EAAV,8EAAGtD,CAAH,gMAMV,SAAAI,GAAK,OAAIA,EAAMuC,MAAMY,OAAOC,WAEjB,SAAApD,GAAK,OAAIA,EAAMuC,MAAMY,OAAOC,WAIhC,SAAApD,GAAK,OAAIA,EAAMuC,MAAMY,OAAOC,WACjC,SAAApD,GAAK,OAAIA,EAAMuC,MAAMY,OAAOE,aAoB1BC,EAhBA,kBACb,kBAACR,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAiBM,KAAK,oCAAtB,UAGA,kBAACN,EAAD,CAAiBM,KAAK,qCAAtB,WAGA,kBAACN,EAAD,CAAiBM,KAAK,6DAAtB,eC5BAC,EAAO5D,IAAOC,IAAV,kEAAGD,CAAH,2PAEM,SAAAI,GAAK,OAAIA,EAAMuC,MAAMY,OAAOE,aACjC,SAAArD,GAAK,OAAIA,EAAMuC,MAAMY,OAAOC,WAmDxBK,IAnCA,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAEhB,OACE,kBAAC,IAAD,CACEyB,MAAK,aASLC,OAAQ,SAAAC,GAAI,OACV,oCACE,kBAAC,IAAD,CAAQvD,MAAOuD,EAAKC,KAAKC,aAAazD,OACpC,0BAAM0D,KAAK,OACX,0BAAMC,QAAQ,UACd,+BAAQJ,EAAKC,KAAKC,aAAazD,OAC/B,0BAAM4D,IAAI,YAAYV,KAAK,sCAE7B,kBAAC,IAAD,CAAehB,MAAOA,KACpB,kBAACiB,EAAD,KACE,kBAAC,EAAD,KAASI,EAAKC,KAAKC,aAAazD,OAChC,kBAAC,IAAD,CAAQ6D,UAAU,UAAlB,UACA,kBAAC,EAAD,KAAOjC,GACP,kBAAC,EAAD","file":"component---src-pages-projects-js-5307337772d794238ff4.js","sourcesContent":["import React, { useState } from \"react\"\nimport { animated, useSpring } from \"react-spring\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  max-width: 500px;\n  min-width: 300px;\n  padding: 20px;\n`\n\nconst Card = styled(animated.div)`\n  display: flex;\n  height: 200px;\n  width: 100%;\n  padding: 20px;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  will-change: transform, opacity;\n  border-radius: 4px;\n  background: ${props => props.inputcolor};\n`\n\nconst FrontCard = styled(Card)`\n  font-weight: 700;\n`\n\nconst BackCard = styled(Card)`\n  filter: hue-rotate(45deg);\n  font-size: 14px;\n`\n\nconst FlipCard = ({ title, content, color }) => {\n  const [isFlipped, setFlipped] = useState(false)\n\n  const { transform, opacity } = useSpring({\n    opacity: isFlipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${isFlipped ? 180 : 0}deg)`,\n    config: { mass: 5, tension: 500, friction: 80 },\n  })\n\n  return (\n    <Wrapper onClick={() => setFlipped(!isFlipped)}>\n      {!isFlipped ? (\n        <FrontCard\n          style={{ opacity: opacity.interpolate(o => 1 - 0), transform }}\n          inputcolor={color}\n        >\n          {title}\n        </FrontCard>\n      ) : (\n        <BackCard\n          style={{\n            opacity,\n            transform: transform.interpolate(t => `${t} rotateX(180deg)`),\n          }}\n          inputcolor={color}\n        >\n          {content}\n        </BackCard>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default FlipCard\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport FlipCard from \"../components/flipCard\"\nimport styled from \"styled-components\"\n\nconst ProjectsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst Projects = () => {\n  const myProjects = [\n    {\n      id: 1,\n      name: \"MyUtilityConnection\",\n      description: `Building a web app to solve a problem in the UK utilities industry. \n        Currently using NodeJS, MongoDB and GraphQL for the backend and React for the frontend. \n        Main challenge is in writing a complex business logic in the backend and exposing it via a custom GraphQL Schema`,\n      color: \"teal\",\n    },\n    {\n      id: 2,\n      name: \"StockBar\",\n      description: `Building a mobile app to facilitate the stock management in a local hospital by using the camera on a mobile phone to read from and write to a database. \n        The staff needs to juggle an extraordinary number of responsibilities and this will be \n        developed to be as quick and unobtrusive as possible. Full tech stack not yet defined but should use React-Native to develop for mobile platforms.`,\n      color: \"dodgerblue\",\n    },\n    {\n      id: 3,\n      name: \"SnagTracker\",\n      description: `A mobile app focused on improving the communication between clients and contractors in the \"after-care period\" of home renovation works.\n        In simple terms it will be a cross between Instagram and To-do lists, with performance analytics mixed in.`,\n      color: \"rebeccapurple\",\n    },\n    {\n      id: 4,\n      name: \"WaterPredictions\",\n      description:\n        \"While working for Veolia Water in Portugal I developed a proof of concept in C# for a software that would take historical data from local telemetry, factor in long range weather patterns and show the optimal configuration of the water network one week ahead to minimise the cost of acquisition of water from adjacent companies.\",\n      color: \"firebrick\",\n    },\n    {\n      id: 5,\n      name: \"Portfolio\",\n      description:\n        \"This website was built with Gatsby, but not yet making the most of what a JAM stack can do (Javascript And Markup). In the near future I will add my own blog as well as well as introduce several code optimisations and new features\",\n      color: \"orangered\",\n    },\n  ]\n\n  return (\n    <Layout>\n      <h1>My Projects</h1>\n      <p>\n        As a Junior Developer my learning and development is mostly motivated by\n        coming across different suggestions and trying to implement them,\n        overcoming challenges as they arise. Here are some of the projects I\n        have worked on or am actively working on to overcome challenges in\n        backend development.\n      </p>\n      <p>Feel free to ask me about them.</p>\n      <ProjectsWrapper>\n        {myProjects.map(({ id, name, description, color }) => (\n          <FlipCard key={id} title={name} content={description} color={color} />\n        ))}\n      </ProjectsWrapper>\n    </Layout>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport styled from \"styled-components\"\n\n// import react-spring dependencies\nimport { animated, useSpring } from \"react-spring\"\n\nconst StyledMain = styled(animated.main)`\n  grid-area: main;\n  /* height: 100%; */\n  padding: 20px 50px 20px 50px;\n\n  @media (max-width: 700px) {\n    padding: 20px;\n  }\n`\n\nconst Main = ({ children }) => {\n  // declare react-spring hook\n  const fade = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n  })\n\n  return <StyledMain style={fade}>{children}</StyledMain>\n}\n\nexport default Main\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledLogo = styled.div``\n\nconst TitleText = styled.div`\n  font-family: ${props => props.theme.fonts.title};\n  font-size: 2.5rem;\n  text-align: center;\n`\n\nconst SubTitleText = styled.div`\n  font-size: 0.875rem;\n  text-align: center;\n`\n\nconst Logo = () => (\n  <StyledLogo>\n    <TitleText>Filipe Est√°cio</TitleText>\n    <SubTitleText>A Civil Engineer gone Digital</SubTitleText>\n  </StyledLogo>\n)\n\nexport default Logo\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Logo from \"./logo\"\n\nconst StyledHeader = styled.header`\n  grid-area: header;\n  padding: 20px;\n`\n\nconst Header = () => (\n  <StyledHeader>\n    <Logo />\n  </StyledHeader>\n)\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledFooter = styled.footer`\n  grid-area: footer;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 20px;\n`\n\nconst SocialMediaList = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nconst SocialMediaLink = styled.a`\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  text-decoration: none;\n  color: ${props => props.theme.colors.primary};\n  padding: 5px 10px;\n  border: 1px solid ${props => props.theme.colors.primary};\n  border-radius: 4px;\n\n  &:hover {\n    background: ${props => props.theme.colors.primary};\n    color: ${props => props.theme.colors.secondary};\n  }\n`\n\nconst Footer = () => (\n  <StyledFooter>\n    <SocialMediaList>\n      <SocialMediaLink href=\"https://github.com/filipeestacio\">\n        Github\n      </SocialMediaLink>\n      <SocialMediaLink href=\"https://twitter.com/FilipeEstacio\">\n        Twitter\n      </SocialMediaLink>\n      <SocialMediaLink href=\"https://www.linkedin.com/in/filipe-est%C3%A1cio-1b7bbb20/\">\n        LinkedIn\n      </SocialMediaLink>\n    </SocialMediaList>\n  </StyledFooter>\n)\n\nexport default Footer\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\n// import styled-components dependencies\nimport styled from \"styled-components\"\nimport { ThemeProvider } from \"styled-components\"\nimport { theme } from \"../theme/theme\"\n\n// Import components\nimport Main from \"./main\"\nimport Header from \"./header\"\nimport Navbar from \"./navbar\"\nimport Footer from \"./footer\"\n\nconst Grid = styled.div`\n  min-height: 100%;\n  background: ${props => props.theme.colors.secondary};\n  color: ${props => props.theme.colors.primary};\n  display: grid;\n\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto 1fr auto;\n  grid-template-areas:\n    \"header header\"\n    \"navbar main\"\n    \"footer footer\";\n\n  @media (max-width: 700px) {\n    display: flex;\n    flex-direction: column;\n  }\n`\n\nconst Layout = ({ children }) => {\n  // return JSX\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <Helmet title={data.site.siteMetadata.title}>\n            <html lang=\"en\" />\n            <meta charSet=\"utf-8\" />\n            <title>{data.site.siteMetadata.title}</title>\n            <link rel=\"canonical\" href=\"https://filipeestacio.github.io/\" />\n          </Helmet>\n          <ThemeProvider theme={theme}>\n            <Grid>\n              <Header>{data.site.siteMetadata.title}</Header>\n              <Navbar direction=\"column\">Navbar</Navbar>\n              <Main>{children}</Main>\n              <Footer>Footer</Footer>\n            </Grid>\n          </ThemeProvider>\n        </>\n      )}\n    />\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}